%li.inline-flex.items-center.group.gap-1
  - if !root?
    %svg.rtl:rotate-180.block.w-3.h-3.mx-1.text-gray-400{"aria-hidden" => "true", fill: "none", viewbox: "0 0 6 10", xmlns: "http://www.w3.org/2000/svg"}
      %path{d: "m1 9 4-4-4-4", stroke: "currentColor", "stroke-linecap" => "round", "stroke-linejoin" => "round", "stroke-width" => "2"}

  = link_to url, class: 'inline-flex items-center gap-1 text-md ms-1 font-medium group-last:font-bold text-gray-700 hover:text-sky-400 dark:text-gray-400 dark:hover:text-sky-400 transition-colors' do
    = icon
    = content

  - if dropdown
    .relative{ data: { controller: "dropdown", action: "keydown.esc->dropdown#leave" }}
      %button.p-1.rounded.hover:bg-gray-200.dark:hover:bg-gray-800{type: "button", data: { action: "dropdown#toggle click@window->dropdown#hide" }}
        %span.fa-layers.fa-fw.text-gray-500.dark:text-gray-300
          %i.fas.fa-caret-up{data: {fa_transform: 'shrink-5 up-4'}}
          %i.fas.fa-caret-down{data: {fa_transform: 'shrink-5 down-4'}}

      .hidden.transition.transform.origin-top-right.absolute.left-0.mt-1.min-w-44.bg-white.dark:bg-gray-800.rounded-sm{
        class: 'shadow/40',
        data: {
          dropdown_target: "menu",
          transition_enter_from: "opacity-0 scale-95",
          transition_enter_to: "opacity-100 scale-100",
          transition_leave_from: "opacity-100 scale-100",
          transition_leave_to: "opacity-0 scale-95"
        }
      }
        %ul
          - dropdown.recents.each do |item|
            %li.p-1.text-md.leading-none.hover:bg-indigo-200.dark:hover:bg-indigo-600
              = link_to item.name, item.url, class: 'flex items-center gap-2 py-1 px-3'

        - if dropdown.add_action
          = link_to dropdown.add_action, class: 'min-h-8 mt-2 px-2 py-1 leading-none flex justify-center items-center bg-green-500 text-white rounded-b-sm font-semibold', data: {dropdown_target: 'menuItem'} do
            %i.fas.fa-fw.fa-plus
            Add
            = breadcrumb_item.model_name.human.downcase
