.px-4.py-5.sm:p-6[address_pool]
  = form_with(model: AddressPoolForm.new(address_pool), url: [address_pool.exercise, address_pool.network, address_pool], data: { controller: 'model', action: "change->model#update"}) do |form|
    .flex.flex-row.flex-wrap.gap-x-4.gap-y-2
      %div
        = form.label :name, class: 'block font-bold text-gray-700 dark:text-gray-200'
        = form.text_field :name, class: 'form-input'

        - if address_pool.errors[:name].any?
          %span.text-red-600= address_pool.errors[:name].join(', ')

      %div
        = form.label :ip_family, class: 'block font-bold text-gray-700 dark:text-gray-200'
        = form.select :ip_family, pool_ip_families, { include_blank: false }, { data: { controller: 'select' } }

        - if address_pool.errors[:mode].any?
          %span.text-red-600= address_pool.errors[:mode].join(', ')

      %div
        = form.label :scope, class: 'block font-bold text-gray-700 dark:text-gray-200'
        = form.select :scope, pool_scopes, { include_blank: false }, { data: { controller: 'select' } }

        - if address_pool.errors[:scope].any?
          %span.text-red-600= address_pool.errors[:scope].join(', ')

      %div
        %span.block.font-bold.text-gray-700.dark:text-gray-200 API ID
        %p.my-3= address_pool.slug

      .text-right.grow
        = link_to 'javascript:;', data: { action: "model#delete" } do
          %i.fas.fa-times-circle.text-red-600

      .h-0.basis-full
      .flex-1
        = form.label :network_address, class: 'block font-bold text-gray-700 dark:text-gray-200'
        = form.text_field :network_address, class: 'form-input'

        - if address_pool.errors[:network_address].any?
          %span.text-red-600= address_pool.errors[:network_address].join(', ')

      - if address_pool.persisted? && address_pool.network_address
        - if address_pool.ip_v4?
          .grow= render IPPickerComponent.new(form: form, field: :gateway, label: true)
          - unless address_pool.last_octet_is_dynamic?
            .h-0.basis-full
            .grow= render IPPickerComponent.new(form: form, field: :range_start, label: true)
            .grow= render IPPickerComponent.new(form: form, field: :range_end, label: true)

        - else
          .flex-1
            = form.label :gateway, class: 'block font-bold text-gray-700 dark:text-gray-200'
            = render SplitInputComponent.new do |split|
              - split.with_left_cell do
                = render LiquidNetworkAddressComponent.new(object: address_pool)
              - split.with_input(form_helper: form, field: :gateway6)
              - split.with_right_cell do
                = "/#{address_pool.ip_network.prefix}"