.relative[service_check]
  = form_with(model: [service_check.service.exercise, service_check.service, service_check], autocomplete: 'off', data: { controller: 'model', action: "change->model#update"}, class: 'px-3 py-3') do |f|
    .flex.flex-row.space-x-2
      .grow{class: 'basis-1/5'}
        = f.label :network, class: 'font-bold'
        = f.grouped_collection_select :network_id, @exercise.networks.includes(:team).for_grouped_select, :last, :first, :id, :abbreviation, {include_blank: true},  { data: { controller: 'select' }}

      .grow.basis-36
        = f.label :protocol, class: 'font-bold'
        = f.collection_select :protocol, service_protocols, :last, :first, {}, class: 'form-input'

      .grow.basis-36
        = f.label :ip_family, class: 'font-bold'
        = f.collection_select :ip_family, ip_families, :last, :first, {}, class: 'form-input'

      .grow.basis-36
        = f.label :destination_port, class: 'font-bold'
        = f.number_field :destination_port, class: 'form-input'

      .grow.basis-24.self-center.mt-7
        %label.font-bold
          = f.check_box :scored
          = f.object.class.human_attribute_name(:scored)

  - if service_check.persisted?
    .absolute.top-2.right-4
      = form_with(model: [service_check.service.exercise, service_check.service, service_check], method: :delete, data: { turbo_confirm: 'Are you sure?' }) do |f|
        %button{type: 'submit'}
          %i.fas.fa-times-circle.text-red-500
