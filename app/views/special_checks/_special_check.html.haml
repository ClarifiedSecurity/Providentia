.relative[special_check]
  = form_with(model: [special_check.service.exercise, special_check.service, special_check], autocomplete: 'off', data: { controller: 'model', action: "change->model#update"}, class: 'px-3 py-3') do |f|
    .flex.flex-row.space-x-2
      %div{class: 'basis-1/5'}
        = f.label :network, class: 'font-bold'
        = f.grouped_collection_select :network_id, @exercise.networks.includes(:actor).for_grouped_select, :last, :first, :id, :abbreviation, {include_blank: true},  { data: { controller: 'select' }}
      .grow
        = f.label :name, class: 'font-bold'
        = f.text_field :name, class: 'form-input', placeholder: 'Special check name'
        - if special_check.errors[:name].any?
          %span.text-red-600= special_check.errors[:name].join(', ')

      .basis-24.self-center.mt-7
        %label.font-bold
          = f.check_box :scored
          = f.object.class.human_attribute_name(:scored)

  - if special_check.persisted?
    .absolute.top-2.right-4
      = form_with(model: [special_check.service.exercise, special_check.service, special_check], method: :delete, data: { turbo_confirm: 'Are you sure?' }) do |f|
        %button{type: 'submit'}
          %i.fas.fa-times-circle.text-red-500
