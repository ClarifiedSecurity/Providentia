.w-full
  = form_with(model: service_subject_match_condition, url: exercise_service_service_subject_condition_path(@service.exercise, @service, service_subject, service_subject_match_condition.id), method: :patch, data: { controller: 'model', action: "change->model#update" }, html: { inert: !allowed_to?(:update?, service_subject) }) do |form|
    .flex.grow.gap-x-2.place-items-center
      .grow{class: 'basis-1/3'}
        .font-bold.text-gray-700.dark:text-gray-200= service_subject_match_condition.class.human_attribute_name(:matcher_type)
        = form.collection_select :matcher_type, service_subject_types, :last, :first, { include_blank: service_subject_match_condition.matcher_type.blank? }, { class: 'form-input', disabled: !allowed_to?(:update?, @service), data: { controller: 'select'} }

      - if service_subject.errors[:matcher_type].any?
        %span.text-red-600= vm.errors[:matcher_type].join(', ')

      .grow{class: 'basis-1/3'}
        .font-bold.text-gray-700.dark:text-gray-200= service_subject_match_condition.class.human_attribute_name(:matcher_id)
        = form.collection_select :matcher_id, subject_selector_scope(service_subject_match_condition), :last, :first, { include_blank: service_subject_match_condition.matcher_id.blank? || !service_subject_match_condition.matched.exists? }, { class: 'form-input', disabled: !allowed_to?(:update?, @service), data: { controller: 'select'} }

      %div
        .font-bold.text-gray-700.dark:text-gray-200= service_subject_match_condition.class.human_attribute_name(:invert)
        %label.inline-flex.items-center.cursor-pointer
          = form.check_box :invert, class: 'sr-only peer', disabled: !allowed_to?(:update?, @service)
          .relative.w-11.h-6.my-2.bg-gray-200.peer-focus:outline-hidden.peer-focus:ring-4.peer-focus:ring-blue-300.dark:peer-focus:ring-blue-800.rounded-full.peer.dark:bg-gray-700.peer-checked:after:translate-x-full.peer-checked:rtl:after:-translate-x-full.peer-checked:after:border-white.after:absolute.after:bg-white.after:border-gray-300.after:border.after:rounded-full.after:w-5.after:h-5.after:transition-all.dark:border-gray-600.peer-checked:bg-blue-600{class: "after:content-[''] after:top-[2px] after:start-[2px]"}

      - if service_subject.errors[:matcher_id].any?
        %span.text-red-600= vm.errors[:matcher_id].join(', ')

      - if allowed_to?(:update?, service_subject)
        %div.mt-6
          = link_to 'javascript:;', data: { action: "model#delete" } do
            %i.fas.fa-times-circle.text-red-600
